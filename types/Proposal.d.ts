/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ProposalInterface extends ethers.utils.Interface {
  functions: {
    "close()": FunctionFragment;
    "creator()": FunctionFragment;
    "execute()": FunctionFragment;
    "expiration()": FunctionFragment;
    "fund()": FunctionFragment;
    "funder()": FunctionFragment;
    "initialize(address,string,address,uint8)": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "proposalData()": FunctionFragment;
    "proposalType()": FunctionFragment;
    "setGovernor(address)": FunctionFragment;
    "setMultiToken(address)": FunctionFragment;
    "status()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "title()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "close", values?: undefined): string;
  encodeFunctionData(functionFragment: "creator", values?: undefined): string;
  encodeFunctionData(functionFragment: "execute", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "expiration",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "fund", values?: undefined): string;
  encodeFunctionData(functionFragment: "funder", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "proposalData",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proposalType",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "setGovernor", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setMultiToken",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "status", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "title", values?: undefined): string;

  decodeFunctionResult(functionFragment: "close", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "creator", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "expiration", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fund", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "funder", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposalData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposalType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGovernor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMultiToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "status", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "title", data: BytesLike): Result;

  events: {
    "ProposalClosed(uint256)": EventFragment;
    "ProposalCreated(address,address,uint256)": EventFragment;
    "ProposalExecuted(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ProposalClosed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalExecuted"): EventFragment;
}

export class Proposal extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ProposalInterface;

  functions: {
    close(overrides?: Overrides): Promise<ContractTransaction>;

    "close()"(overrides?: Overrides): Promise<ContractTransaction>;

    creator(overrides?: CallOverrides): Promise<[string]>;

    "creator()"(overrides?: CallOverrides): Promise<[string]>;

    execute(overrides?: Overrides): Promise<ContractTransaction>;

    "execute()"(overrides?: Overrides): Promise<ContractTransaction>;

    expiration(overrides?: CallOverrides): Promise<[BigNumber]>;

    "expiration()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    fund(overrides?: PayableOverrides): Promise<ContractTransaction>;

    "fund()"(overrides?: PayableOverrides): Promise<ContractTransaction>;

    funder(overrides?: CallOverrides): Promise<[string]>;

    "funder()"(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initialize(address,string,address,uint8)"(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    proposalData(overrides?: CallOverrides): Promise<[string]>;

    "proposalData()"(overrides?: CallOverrides): Promise<[string]>;

    proposalType(overrides?: CallOverrides): Promise<[number]>;

    "proposalType()"(overrides?: CallOverrides): Promise<[number]>;

    setGovernor(
      gov: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setGovernor(address)"(
      gov: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setMultiToken(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setMultiToken(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    status(
      overrides?: CallOverrides
    ): Promise<[number] & { curCtatus: number }>;

    "status()"(
      overrides?: CallOverrides
    ): Promise<[number] & { curCtatus: number }>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    title(overrides?: CallOverrides): Promise<[string]>;

    "title()"(overrides?: CallOverrides): Promise<[string]>;
  };

  close(overrides?: Overrides): Promise<ContractTransaction>;

  "close()"(overrides?: Overrides): Promise<ContractTransaction>;

  creator(overrides?: CallOverrides): Promise<string>;

  "creator()"(overrides?: CallOverrides): Promise<string>;

  execute(overrides?: Overrides): Promise<ContractTransaction>;

  "execute()"(overrides?: Overrides): Promise<ContractTransaction>;

  expiration(overrides?: CallOverrides): Promise<BigNumber>;

  "expiration()"(overrides?: CallOverrides): Promise<BigNumber>;

  fund(overrides?: PayableOverrides): Promise<ContractTransaction>;

  "fund()"(overrides?: PayableOverrides): Promise<ContractTransaction>;

  funder(overrides?: CallOverrides): Promise<string>;

  "funder()"(overrides?: CallOverrides): Promise<string>;

  initialize(
    __creator: string,
    __title: string,
    __proposalData: string,
    __proposalType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initialize(address,string,address,uint8)"(
    __creator: string,
    __title: string,
    __proposalData: string,
    __proposalType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  onERC1155BatchReceived(
    arg0: string,
    arg1: string,
    arg2: BigNumberish[],
    arg3: BigNumberish[],
    arg4: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish[],
    arg3: BigNumberish[],
    arg4: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  onERC1155Received(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    arg0: string,
    arg1: string,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  proposalData(overrides?: CallOverrides): Promise<string>;

  "proposalData()"(overrides?: CallOverrides): Promise<string>;

  proposalType(overrides?: CallOverrides): Promise<number>;

  "proposalType()"(overrides?: CallOverrides): Promise<number>;

  setGovernor(gov: string, overrides?: Overrides): Promise<ContractTransaction>;

  "setGovernor(address)"(
    gov: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setMultiToken(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setMultiToken(address)"(
    token: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  status(overrides?: CallOverrides): Promise<number>;

  "status()"(overrides?: CallOverrides): Promise<number>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  title(overrides?: CallOverrides): Promise<string>;

  "title()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    close(overrides?: CallOverrides): Promise<void>;

    "close()"(overrides?: CallOverrides): Promise<void>;

    creator(overrides?: CallOverrides): Promise<string>;

    "creator()"(overrides?: CallOverrides): Promise<string>;

    execute(overrides?: CallOverrides): Promise<void>;

    "execute()"(overrides?: CallOverrides): Promise<void>;

    expiration(overrides?: CallOverrides): Promise<BigNumber>;

    "expiration()"(overrides?: CallOverrides): Promise<BigNumber>;

    fund(overrides?: CallOverrides): Promise<void>;

    "fund()"(overrides?: CallOverrides): Promise<void>;

    funder(overrides?: CallOverrides): Promise<string>;

    "funder()"(overrides?: CallOverrides): Promise<string>;

    initialize(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "initialize(address,string,address,uint8)"(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    proposalData(overrides?: CallOverrides): Promise<string>;

    "proposalData()"(overrides?: CallOverrides): Promise<string>;

    proposalType(overrides?: CallOverrides): Promise<number>;

    "proposalType()"(overrides?: CallOverrides): Promise<number>;

    setGovernor(gov: string, overrides?: CallOverrides): Promise<void>;

    "setGovernor(address)"(
      gov: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setMultiToken(token: string, overrides?: CallOverrides): Promise<void>;

    "setMultiToken(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<void>;

    status(overrides?: CallOverrides): Promise<number>;

    "status()"(overrides?: CallOverrides): Promise<number>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    title(overrides?: CallOverrides): Promise<string>;

    "title()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    ProposalClosed(proposalHash: null): EventFilter;

    ProposalCreated(creator: null, pool: null, proposalHash: null): EventFilter;

    ProposalExecuted(proposalHash: null): EventFilter;
  };

  estimateGas: {
    close(overrides?: Overrides): Promise<BigNumber>;

    "close()"(overrides?: Overrides): Promise<BigNumber>;

    creator(overrides?: CallOverrides): Promise<BigNumber>;

    "creator()"(overrides?: CallOverrides): Promise<BigNumber>;

    execute(overrides?: Overrides): Promise<BigNumber>;

    "execute()"(overrides?: Overrides): Promise<BigNumber>;

    expiration(overrides?: CallOverrides): Promise<BigNumber>;

    "expiration()"(overrides?: CallOverrides): Promise<BigNumber>;

    fund(overrides?: PayableOverrides): Promise<BigNumber>;

    "fund()"(overrides?: PayableOverrides): Promise<BigNumber>;

    funder(overrides?: CallOverrides): Promise<BigNumber>;

    "funder()"(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initialize(address,string,address,uint8)"(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    proposalData(overrides?: CallOverrides): Promise<BigNumber>;

    "proposalData()"(overrides?: CallOverrides): Promise<BigNumber>;

    proposalType(overrides?: CallOverrides): Promise<BigNumber>;

    "proposalType()"(overrides?: CallOverrides): Promise<BigNumber>;

    setGovernor(gov: string, overrides?: Overrides): Promise<BigNumber>;

    "setGovernor(address)"(
      gov: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setMultiToken(token: string, overrides?: Overrides): Promise<BigNumber>;

    "setMultiToken(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    status(overrides?: CallOverrides): Promise<BigNumber>;

    "status()"(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    title(overrides?: CallOverrides): Promise<BigNumber>;

    "title()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    close(overrides?: Overrides): Promise<PopulatedTransaction>;

    "close()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    creator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "creator()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    execute(overrides?: Overrides): Promise<PopulatedTransaction>;

    "execute()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    expiration(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "expiration()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fund(overrides?: PayableOverrides): Promise<PopulatedTransaction>;

    "fund()"(overrides?: PayableOverrides): Promise<PopulatedTransaction>;

    funder(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "funder()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initialize(address,string,address,uint8)"(
      __creator: string,
      __title: string,
      __proposalData: string,
      __proposalType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish[],
      arg3: BigNumberish[],
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      arg0: string,
      arg1: string,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    proposalData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "proposalData()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    proposalType(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "proposalType()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setGovernor(
      gov: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setGovernor(address)"(
      gov: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setMultiToken(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setMultiToken(address)"(
      token: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    status(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "status()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    title(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "title()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
