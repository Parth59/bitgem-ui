/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockQueryHelper } from "../MockQueryHelper";

export class MockQueryHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockQueryHelper> {
    return super.deploy(overrides || {}) as Promise<MockQueryHelper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockQueryHelper {
    return super.attach(address) as MockQueryHelper;
  }
  connect(signer: Signer): MockQueryHelper__factory {
    return super.connect(signer) as MockQueryHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockQueryHelper {
    return new Contract(address, _abi, signerOrProvider) as MockQueryHelper;
  }
}

const _abi = [
  {
    inputs: [],
    name: "COIN",
    outputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "coinQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "ethereum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPathForCoinToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063868d2d1e1161005b578063868d2d1e146101a4578063a54a72b7146101ee578063c45a015514610212578063e6a439051461021a57610088565b8063096666961461008d5780631246dbf5146101035780633e99c1e41461013d5780635bb478081461017c575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610248565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100ef5781810151838201526020016100d7565b505050509050019250505060405180910390f35b6101296004803603602081101561011957600080fd5b50356001600160a01b031661024e565b604080519115158252519081900360200190f35b6101636004803603602081101561015357600080fd5b50356001600160a01b0316610254565b6040805192835260208301919091528051918290030190f35b6101a26004803603602081101561019257600080fd5b50356001600160a01b031661025c565b005b6101d0600480360360408110156101ba57600080fd5b506001600160a01b03813516906020013561025f565b60408051938452602084019290925282820152519081900360600190f35b6101f6610291565b604080516001600160a01b039092168252519081900360200190f35b6101f6610296565b6101f66004803603604081101561023057600080fd5b506001600160a01b038135811691602001351661029b565b50606090565b50600190565b506000908190565b50565b6000808061026e84600a6102a3565b6102798560c861030c565b61028486601461030c565b9250925092509250925092565b606390565b600090565b600092915050565b60008082116102f9576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161030257fe5b0490505b92915050565b60008261031b57506000610306565b8282028284828161032857fe5b04146103655760405162461bcd60e51b815260040180806020018281038252602181526020018061036d6021913960400191505060405180910390fd5b939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122056a2936bd9f32f7e97ec69a6f53f72cb4a83961f074310ecdddbd573bcc068c064736f6c63430007030033";
