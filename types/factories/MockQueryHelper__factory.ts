/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MockQueryHelper } from "../MockQueryHelper";

export class MockQueryHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MockQueryHelper> {
    return super.deploy(overrides || {}) as Promise<MockQueryHelper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockQueryHelper {
    return super.attach(address) as MockQueryHelper;
  }
  connect(signer: Signer): MockQueryHelper__factory {
    return super.connect(signer) as MockQueryHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockQueryHelper {
    return new Contract(address, _abi, signerOrProvider) as MockQueryHelper;
  }
}

const _abi = [
  {
    inputs: [],
    name: "COIN",
    outputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "coinQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "ethereum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPathForCoinToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610452806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063868d2d1e1161005b578063868d2d1e146101d8578063a54a72b71461022f578063c45a015514610260578063e6a439051461026857610088565b8063096666961461008d5780631246dbf5146101105780633e99c1e4146101575780635bb47808146101a3575b600080fd5b6100c0600480360360208110156100a357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102a3565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100fc5781810151838201526020016100e4565b505050509050019250505060405180910390f35b6101436004803603602081101561012657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102a9565b604080519115158252519081900360200190f35b61018a6004803603602081101561016d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102af565b6040805192835260208301919091528051918290030190f35b6101d6600480360360208110156101b957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102b7565b005b610211600480360360408110156101ee57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356102ba565b60408051938452602084019290925282820152519081900360600190f35b6102376102ec565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102376102f1565b6102376004803603604081101561027e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166102f6565b50606090565b50600190565b506000908190565b50565b600080806102c984600a6102fe565b6102d48560c8610381565b6102df866014610381565b9250925092509250925092565b606390565b600090565b600092915050565b600080821161036e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b81838161037757fe5b0490505b92915050565b6000826103905750600061037b565b8282028284828161039d57fe5b04146103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806103fc6021913960400191505060405180910390fd5b939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212206fd8cc6cfca34cffebe3976e1f1855ebb42c60d8bf2e69f201075418c965d5b564736f6c63430007030033";
