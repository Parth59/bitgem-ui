/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenPoolQuerier } from "../TokenPoolQuerier";

export class TokenPoolQuerier__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TokenPoolQuerier> {
    return super.deploy(overrides || {}) as Promise<TokenPoolQuerier>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenPoolQuerier {
    return super.attach(address) as TokenPoolQuerier;
  }
  connect(signer: Signer): TokenPoolQuerier__factory {
    return super.connect(signer) as TokenPoolQuerier__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPoolQuerier {
    return new Contract(address, _abi, signerOrProvider) as TokenPoolQuerier;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gemPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "multitoken",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getOwnedTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "claims",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "gems",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104fe806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806374a552c914610030575b600080fd5b610072600480360360a081101561004657600080fd5b506001600160a01b0381358116916020810135821691604082013516906060810135906080013561010b565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156100b657818101518382015260200161009e565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156100f55781810151838201526020016100dd565b5050505090500194505050505060405180910390f35b606080866001600160a01b031663f4fde0d36040518163ffffffff1660e01b815260040160206040518083038186803b15801561014757600080fd5b505afa15801561015b573d6000803e3d6000fd5b505050506040513d602081101561017157600080fd5b5051600185018402106101e557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4f55545f4f465f52414e47450000000000000000000000000000000000000000604482015290519081900360640190fd5b6000808467ffffffffffffffff811180156101ff57600080fd5b50604051908082528060200260200182016040528015610229578160200160208202803683370190505b5093508467ffffffffffffffff8111801561024357600080fd5b5060405190808252806020026020018201604052801561026d578160200160208202803683370190505b5092508585025b85868802018110156104bb5760008a6001600160a01b031663d31674db836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156102c657600080fd5b505afa1580156102da573d6000803e3d6000fd5b505050506040513d60208110156102f057600080fd5b5051604080517fe6c3b1f60000000000000000000000000000000000000000000000000000000081526004810183905290519192506000916001600160a01b038e169163e6c3b1f6916024808301926020929190829003018186803b15801561035857600080fd5b505afa15801561036c573d6000803e3d6000fd5b505050506040513d602081101561038257600080fd5b5051604080517efdd58e0000000000000000000000000000000000000000000000000000000081526001600160a01b038d81166004830152602482018690529151929350600092918e169162fdd58e91604480820192602092909190829003018186803b1580156103f257600080fd5b505afa158015610406573d6000803e3d6000fd5b505050506040513d602081101561041c57600080fd5b5051905080158061042b575082155b806104365750826001145b15610443575050506104b3565b600182600281111561045157fe5b141561047b578288878060010198508151811061046a57fe5b6020026020010181815250506104af565b600282600281111561048957fe5b14156104af57828786806001019750815181106104a257fe5b6020026020010181815250505b5050505b600101610274565b505050955095935050505056fea2646970667358221220be63d44c4930684947127d33039012bfc27cf021c11e469046eeda1f8021a19f64736f6c63430007030033";
