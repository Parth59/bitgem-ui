/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PangolinLib } from "../PangolinLib";

export class PangolinLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PangolinLib> {
    return super.deploy(overrides || {}) as Promise<PangolinLib>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PangolinLib {
    return super.attach(address) as PangolinLib;
  }
  connect(signer: Signer): PangolinLib__factory {
    return super.connect(signer) as PangolinLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PangolinLib {
    return new Contract(address, _abi, signerOrProvider) as PangolinLib;
  }
}

const _abi = [
  {
    inputs: [],
    name: "FUJI_PANGOLIN_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PANGOLIN_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAVAX",
    outputs: [
      {
        internalType: "address",
        name: "wavax",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "avaxQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "avalanche",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avaxReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForAVAXoToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "pairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610feb610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100c85760003560e01c806361e0b77f1161008057806373b295c21161006557806373b295c2146102a65780639df27628146102ae578063c45a015514610305576100c8565b806361e0b77f1461021c5780636d91c0e214610261576100c8565b806326edfd81116100b157806326edfd81146101455780633ba130d6146101c85780633e99c1e4146101d0576100c8565b80631139cde0146100cd5780631246dbf5146100fe575b600080fd5b6100d561030d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101316004803603602081101561011457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610325565b604080519115158252519081900360200190f35b6101786004803603602081101561015b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610517565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156101b457818101518382015260200161019c565b505050509050019250505060405180910390f35b6100d5610648565b610203600480360360208110156101e657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610660565b6040805192835260208301919091528051918290030190f35b6100d56004803603606081101561023257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135821691604090910135166106f8565b6100d56004803603606081101561027757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135821691604090910135166108da565b6100d56109c5565b6102e7600480360360408110156102c457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610a52565b60408051938452602084019290925282820152519081900360600190f35b6100d5610cf1565b73e4a575550c2b460d2307b82dcd7afe84ad1484dd81565b60008073efa94de7a4656d787667c749f7e1223d71e9fd88905060008173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561038757600080fd5b505afa15801561039b573d6000803e3d6000fd5b505050506040513d60208110156103b157600080fd5b5051604080517f73b295c2000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff8516916373b295c2916004808301926020929190829003018186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d602081101561044957600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b1580156104c957600080fd5b505afa1580156104dd573d6000803e3d6000fd5b505050506040513d60208110156104f357600080fd5b505173ffffffffffffffffffffffffffffffffffffffff1615159695505050505050565b604080516002808252606082810190935273efa94de7a4656d787667c749f7e1223d71e9fd88918391816020016020820280368337019050509050838160008151811061056057fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff166373b295c26040518163ffffffff1660e01b815260040160206040518083038186803b1580156105e057600080fd5b505afa1580156105f4573d6000803e3d6000fd5b505050506040513d602081101561060a57600080fd5b505181518290600190811061061b57fe5b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152915050919050565b73efa94de7a4656d787667c749f7e1223d71e9fd8881565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156106a957600080fd5b505afa1580156106bd573d6000803e3d6000fd5b505050506040513d60608110156106d357600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169591169350915050565b600073ffffffffffffffffffffffffffffffffffffffff841661077c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316158015906107b6575073ffffffffffffffffffffffffffffffffffffffff821615155b61082157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b8373ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b1580156108a657600080fd5b505afa1580156108ba573d6000803e3d6000fd5b505050506040513d60208110156108d057600080fd5b5051949350505050565b60008060006108e98585610d4d565b604080517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527f40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b600073efa94de7a4656d787667c749f7e1223d71e9fd8873ffffffffffffffffffffffffffffffffffffffff166373b295c26040518163ffffffff1660e01b815260040160206040518083038186803b158015610a2157600080fd5b505afa158015610a35573d6000803e3d6000fd5b505050506040513d6020811015610a4b57600080fd5b5051919050565b60008060008073efa94de7a4656d787667c749f7e1223d71e9fd88905060008173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab757600080fd5b505afa158015610acb573d6000803e3d6000fd5b505050506040513d6020811015610ae157600080fd5b5051604080517f73b295c2000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff8516916373b295c2916004808301926020929190829003018186803b158015610b4f57600080fd5b505afa158015610b63573d6000803e3d6000fd5b505050506040513d6020811015610b7957600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b158015610bf957600080fd5b505afa158015610c0d573d6000803e3d6000fd5b505050506040513d6020811015610c2357600080fd5b5051604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152905191925073ffffffffffffffffffffffffffffffffffffffff831691630902f1ac91600480820192606092909190829003018186803b158015610c8f57600080fd5b505afa158015610ca3573d6000803e3d6000fd5b505050506040513d6060811015610cb957600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169750169450610ce4888787610eb6565b9650505050509250925092565b600073efa94de7a4656d787667c749f7e1223d71e9fd8873ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610a2157600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610deb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726963653a204944454e544943414c5f414444524553534553000000000000604482015290519081900360640190fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610e25578284610e28565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216610eaf57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f50726963653a205a45524f5f4144445245535300000000000000000000000000604482015290519081900360640190fd5b9250929050565b6000808411610f2657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f50726963653a2050726963650000000000000000000000000000000000000000604482015290519081900360640190fd5b600083118015610f365750600082115b610fa157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726963653a20494e53554646494349454e545f4c4951554944495459000000604482015290519081900360640190fd5b8282850281610fac57fe5b0494935050505056fea26469706673582212206443b02ae399d3edccc48e576e7d0d3584232b7055fdb5eb3e4c764ade2c856064736f6c63430007030033";
