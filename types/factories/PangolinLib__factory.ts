/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PangolinLib } from "../PangolinLib";

export class PangolinLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PangolinLib> {
    return super.deploy(overrides || {}) as Promise<PangolinLib>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PangolinLib {
    return super.attach(address) as PangolinLib;
  }
  connect(signer: Signer): PangolinLib__factory {
    return super.connect(signer) as PangolinLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PangolinLib {
    return new Contract(address, _abi, signerOrProvider) as PangolinLib;
  }
}

const _abi = [
  {
    inputs: [],
    name: "FUJI_PANGOLIN_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PANGOLIN_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAVAX",
    outputs: [
      {
        internalType: "address",
        name: "wavax",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "avaxQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "avalanche",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avaxReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForAVAXoToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "pairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610d2b610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100c85760003560e01c806361e0b77f1161008057806373b295c21161006557806373b295c2146102585780639df2762814610260578063c45a0155146102aa576100c8565b806361e0b77f146101e85780636d91c0e214610220576100c8565b806326edfd81116100b157806326edfd811461012b5780633ba130d6146101a15780633e99c1e4146101a9576100c8565b80631139cde0146100cd5780631246dbf5146100f1575b600080fd5b6100d56102b2565b604080516001600160a01b039092168252519081900360200190f35b6101176004803603602081101561010757600080fd5b50356001600160a01b03166102ca565b604080519115158252519081900360200190f35b6101516004803603602081101561014157600080fd5b50356001600160a01b0316610456565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561018d578181015183820152602001610175565b505050509050019250505060405180910390f35b6100d5610553565b6101cf600480360360208110156101bf57600080fd5b50356001600160a01b031661056b565b6040805192835260208301919091528051918290030190f35b6100d5600480360360608110156101fe57600080fd5b506001600160a01b0381358116916020810135821691604090910135166105f6565b6100d56004803603606081101561023657600080fd5b506001600160a01b038135811691602081013582169160409091013516610756565b6100d561082e565b61028c6004803603604081101561027657600080fd5b506001600160a01b0381351690602001356108ae565b60408051938452602084019290925282820152519081900360600190f35b6100d5610ae7565b73e4a575550c2b460d2307b82dcd7afe84ad1484dd81565b60008073efa94de7a4656d787667c749f7e1223d71e9fd8890506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561031f57600080fd5b505afa158015610333573d6000803e3d6000fd5b505050506040513d602081101561034957600080fd5b5051604080516339d94ae160e11b815290519192506000916001600160a01b038516916373b295c2916004808301926020929190829003018186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d60208110156103bb57600080fd5b50516040805163e6a4390560e01b81526001600160a01b038881166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b15801561041557600080fd5b505afa158015610429573d6000803e3d6000fd5b505050506040513d602081101561043f57600080fd5b50516001600160a01b031615159695505050505050565b604080516002808252606082810190935273efa94de7a4656d787667c749f7e1223d71e9fd88918391816020016020820280368337019050509050838160008151811061049f57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050816001600160a01b03166373b295c26040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f857600080fd5b505afa15801561050c573d6000803e3d6000fd5b505050506040513d602081101561052257600080fd5b505181518290600190811061053357fe5b6001600160a01b0390921660209283029190910190910152915050919050565b73efa94de7a4656d787667c749f7e1223d71e9fd8881565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156105a757600080fd5b505afa1580156105bb573d6000803e3d6000fd5b505050506040513d60608110156105d157600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169591169350915050565b60006001600160a01b038416610653576040805162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0383161580159061067357506001600160a01b03821615155b6106c4576040805162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b836001600160a01b031663e6a4390584846040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561072257600080fd5b505afa158015610736573d6000803e3d6000fd5b505050506040513d602081101561074c57600080fd5b5051949350505050565b60008060006107658585610b36565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527f40231f6b438bce0797c9ada29b718a87ea0a5cea3fe9a771abdd76bd41a3e545609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b600073efa94de7a4656d787667c749f7e1223d71e9fd886001600160a01b03166373b295c26040518163ffffffff1660e01b815260040160206040518083038186803b15801561087d57600080fd5b505afa158015610891573d6000803e3d6000fd5b505050506040513d60208110156108a757600080fd5b5051919050565b60008060008073efa94de7a4656d787667c749f7e1223d71e9fd8890506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d602081101561093057600080fd5b5051604080516339d94ae160e11b815290519192506000916001600160a01b038516916373b295c2916004808301926020929190829003018186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d60208110156109a257600080fd5b50516040805163e6a4390560e01b81526001600160a01b038b81166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b1580156109fc57600080fd5b505afa158015610a10573d6000803e3d6000fd5b505050506040513d6020811015610a2657600080fd5b5051604080517f0902f1ac00000000000000000000000000000000000000000000000000000000815290519192506001600160a01b03831691630902f1ac91600480820192606092909190829003018186803b158015610a8557600080fd5b505afa158015610a99573d6000803e3d6000fd5b505050506040513d6060811015610aaf57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169750169450610ada888787610c2a565b9650505050509250925092565b600073efa94de7a4656d787667c749f7e1223d71e9fd886001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561087d57600080fd5b600080826001600160a01b0316846001600160a01b03161415610ba0576040805162461bcd60e51b815260206004820152601a60248201527f50726963653a204944454e544943414c5f414444524553534553000000000000604482015290519081900360640190fd5b826001600160a01b0316846001600160a01b031610610bc0578284610bc3565b83835b90925090506001600160a01b038216610c23576040805162461bcd60e51b815260206004820152601360248201527f50726963653a205a45524f5f4144445245535300000000000000000000000000604482015290519081900360640190fd5b9250929050565b6000808411610c80576040805162461bcd60e51b815260206004820152600c60248201527f50726963653a2050726963650000000000000000000000000000000000000000604482015290519081900360640190fd5b600083118015610c905750600082115b610ce1576040805162461bcd60e51b815260206004820152601d60248201527f50726963653a20494e53554646494349454e545f4c4951554944495459000000604482015290519081900360640190fd5b8282850281610cec57fe5b0494935050505056fea2646970667358221220c0c7ba7a2b3782405bb2f751fd60783851a3060cc04452f53aae2a63293bb0bc64736f6c63430007030033";
