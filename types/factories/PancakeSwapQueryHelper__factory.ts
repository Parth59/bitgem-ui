/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PancakeSwapQueryHelper } from "../PancakeSwapQueryHelper";

export class PancakeSwapQueryHelper__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: PancakeSwapQueryHelperLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      PancakeSwapQueryHelper__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: PancakeSwapQueryHelperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$efe28ed289513e473eb243609f3411e964\\$__", "g"),
      linkLibraryAddresses["__$efe28ed289513e473eb243609f3411e964$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<PancakeSwapQueryHelper> {
    return super.deploy(overrides || {}) as Promise<PancakeSwapQueryHelper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PancakeSwapQueryHelper {
    return super.attach(address) as PancakeSwapQueryHelper;
  }
  connect(signer: Signer): PancakeSwapQueryHelper__factory {
    return super.connect(signer) as PancakeSwapQueryHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PancakeSwapQueryHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PancakeSwapQueryHelper;
  }
}

const _abi = [
  {
    inputs: [],
    name: "COIN",
    outputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "coinQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "ethereum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForCoinToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610763806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063868d2d1e1161005b578063868d2d1e146101a4578063a54a72b7146101ee578063c45a015514610212578063e6a439051461021a57610088565b8063096666961461008d5780631246dbf5146101035780633e99c1e41461013d5780635bb478081461017c575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610248565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100ef5781810151838201526020016100d7565b505050509050019250505060405180910390f35b6101296004803603602081101561011957600080fd5b50356001600160a01b0316610372565b604080519115158252519081900360200190f35b6101636004803603602081101561015357600080fd5b50356001600160a01b03166103fe565b6040805192835260208301919091528051918290030190f35b6101a26004803603602081101561019257600080fd5b50356001600160a01b0316610495565b005b6101d0600480360360408110156101ba57600080fd5b506001600160a01b038135169060200135610498565b60408051938452602084019290925282820152519081900360600190f35b6101f6610542565b604080516001600160a01b039092168252519081900360200190f35b6101f66105b9565b6101f66004803603604081101561023057600080fd5b506001600160a01b03813581169160200135166105ff565b606073__$efe28ed289513e473eb243609f3411e964$__6309666696836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060006040518083038186803b1580156102a257600080fd5b505af41580156102b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156102df57600080fd5b81019080805160405193929190846401000000008211156102ff57600080fd5b90830190602082018581111561031457600080fd5b825186602082028301116401000000008211171561033157600080fd5b82525081516020918201928201910280838360005b8381101561035e578181015183820152602001610346565b505050509050016040525050509050919050565b600073__$efe28ed289513e473eb243609f3411e964$__631246dbf5836040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156103cc57600080fd5b505af41580156103e0573d6000803e3d6000fd5b505050506040513d60208110156103f657600080fd5b505192915050565b60008073__$efe28ed289513e473eb243609f3411e964$__633e99c1e4846040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b15801561045857600080fd5b505af415801561046c573d6000803e3d6000fd5b505050506040513d604081101561048257600080fd5b5080516020909101519094909350915050565b50565b600080600073__$efe28ed289513e473eb243609f3411e964$__63868d2d1e86866040518363ffffffff1660e01b815260040180836001600160a01b031681526020018281526020019250505060606040518083038186803b1580156104fd57600080fd5b505af4158015610511573d6000803e3d6000fd5b505050506040513d606081101561052757600080fd5b50805160208201516040909201519097919650945092505050565b600073__$efe28ed289513e473eb243609f3411e964$__63a54a72b76040518163ffffffff1660e01b815260040160206040518083038186803b15801561058857600080fd5b505af415801561059c573d6000803e3d6000fd5b505050506040513d60208110156105b257600080fd5b5051919050565b600073__$efe28ed289513e473eb243609f3411e964$__63c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561058857600080fd5b60008073__$efe28ed289513e473eb243609f3411e964$__63c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561064657600080fd5b505af415801561065a573d6000803e3d6000fd5b505050506040513d602081101561067057600080fd5b5051604080517f61e0b77f0000000000000000000000000000000000000000000000000000000081526001600160a01b038084166004830152808816602483015286166044820152905191925073__$efe28ed289513e473eb243609f3411e964$__916361e0b77f91606480820192602092909190829003018186803b1580156106f957600080fd5b505af415801561070d573d6000803e3d6000fd5b505050506040513d602081101561072357600080fd5b505194935050505056fea2646970667358221220d8f6de50ddb43be82d1543e14076c1cf28b9bf5505dbc1a0e9320a58e18f7fdf64736f6c63430007030033";

export interface PancakeSwapQueryHelperLibraryAddresses {
  ["__$efe28ed289513e473eb243609f3411e964$__"]: string;
}
