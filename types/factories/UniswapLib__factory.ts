/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { UniswapLib } from "../UniswapLib";

export class UniswapLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<UniswapLib> {
    return super.deploy(overrides || {}) as Promise<UniswapLib>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UniswapLib {
    return super.attach(address) as UniswapLib;
  }
  connect(signer: Signer): UniswapLib__factory {
    return super.connect(signer) as UniswapLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapLib {
    return new Contract(address, _abi, signerOrProvider) as UniswapLib;
  }
}

const _abi = [
  {
    inputs: [],
    name: "UNISWAP_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "ethQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "ethereum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForETHToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610cfc610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c806379b369431161006557806379b36943146101ef5780637dddfe9f146101f7578063ad5c46481461027a578063c45a01551461028257610092565b80631246dbf5146100975780631874f0a9146100de5780633e99c1e41461013557806361e0b77f14610181575b600080fd5b6100ca600480360360208110156100ad57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661028a565b604080519115158252519081900360200190f35b610117600480360360408110156100f457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561047c565b60408051938452602084019290925282820152519081900360600190f35b6101686004803603602081101561014b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661071b565b6040805192835260208301919091528051918290030190f35b6101c66004803603606081101561019757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135821691604090910135166107b3565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101c6610995565b61022a6004803603602081101561020d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166109ad565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561026657818101518382015260200161024e565b505050509050019250505060405180910390f35b6101c6610ade565b6101c6610b6b565b600080731b02da8cb0d097eb8d57a175b88c7d8b47997506905060008173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ec57600080fd5b505afa158015610300573d6000803e3d6000fd5b505050506040513d602081101561031657600080fd5b5051604080517fad5c4648000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff85169163ad5c4648916004808301926020929190829003018186803b15801561038457600080fd5b505afa158015610398573d6000803e3d6000fd5b505050506040513d60208110156103ae57600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b15801561042e57600080fd5b505afa158015610442573d6000803e3d6000fd5b505050506040513d602081101561045857600080fd5b505173ffffffffffffffffffffffffffffffffffffffff1615159695505050505050565b600080600080731b02da8cb0d097eb8d57a175b88c7d8b47997506905060008173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e157600080fd5b505afa1580156104f5573d6000803e3d6000fd5b505050506040513d602081101561050b57600080fd5b5051604080517fad5c4648000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff85169163ad5c4648916004808301926020929190829003018186803b15801561057957600080fd5b505afa15801561058d573d6000803e3d6000fd5b505050506040513d60208110156105a357600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d602081101561064d57600080fd5b5051604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152905191925073ffffffffffffffffffffffffffffffffffffffff831691630902f1ac91600480820192606092909190829003018186803b1580156106b957600080fd5b505afa1580156106cd573d6000803e3d6000fd5b505050506040513d60608110156106e357600080fd5b5080516020909101516dffffffffffffffffffffffffffff918216975016945061070e888787610bc7565b9650505050509250925092565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561076457600080fd5b505afa158015610778573d6000803e3d6000fd5b505050506040513d606081101561078e57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169591169350915050565b600073ffffffffffffffffffffffffffffffffffffffff841661083757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff831615801590610871575073ffffffffffffffffffffffffffffffffffffffff821615155b6108dc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b8373ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561096157600080fd5b505afa158015610975573d6000803e3d6000fd5b505050506040513d602081101561098b57600080fd5b5051949350505050565b731b02da8cb0d097eb8d57a175b88c7d8b4799750681565b6040805160028082526060828101909352731b02da8cb0d097eb8d57a175b88c7d8b4799750691839181602001602082028036833701905050905083816000815181106109f657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7657600080fd5b505afa158015610a8a573d6000803e3d6000fd5b505050506040513d6020811015610aa057600080fd5b5051815182906001908110610ab157fe5b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152915050919050565b6000731b02da8cb0d097eb8d57a175b88c7d8b4799750673ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3a57600080fd5b505afa158015610b4e573d6000803e3d6000fd5b505050506040513d6020811015610b6457600080fd5b5051919050565b6000731b02da8cb0d097eb8d57a175b88c7d8b4799750673ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3a57600080fd5b6000808411610c3757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f50726963653a2050726963650000000000000000000000000000000000000000604482015290519081900360640190fd5b600083118015610c475750600082115b610cb257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726963653a20494e53554646494349454e545f4c4951554944495459000000604482015290519081900360640190fd5b8282850281610cbd57fe5b0494935050505056fea2646970667358221220986a3203f852ec72df50232cc7f57edbd8021e1975361a2a7b9652302542422064736f6c63430007030033";
