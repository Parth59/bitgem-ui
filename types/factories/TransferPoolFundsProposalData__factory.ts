/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TransferPoolFundsProposalData } from "../TransferPoolFundsProposalData";

export class TransferPoolFundsProposalData__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    _pool: string,
    _destination: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<TransferPoolFundsProposalData> {
    return super.deploy(
      _token,
      _pool,
      _destination,
      _amount,
      overrides || {}
    ) as Promise<TransferPoolFundsProposalData>;
  }
  getDeployTransaction(
    _token: string,
    _pool: string,
    _destination: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _pool,
      _destination,
      _amount,
      overrides || {}
    );
  }
  attach(address: string): TransferPoolFundsProposalData {
    return super.attach(address) as TransferPoolFundsProposalData;
  }
  connect(signer: Signer): TransferPoolFundsProposalData__factory {
    return super.connect(signer) as TransferPoolFundsProposalData__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferPoolFundsProposalData {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferPoolFundsProposalData;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101713803806101718339818101604052608081101561003357600080fd5b50805160208201516040830151606090930151600080546001600160a01b03199081166001600160a01b0395861617825560018054821694861694909417909355600280549093169390941692909217905560035560da90819061009790396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806373d4a13a14602d575b600080fd5b60336075565b6040805173ffffffffffffffffffffffffffffffffffffffff958616815293851660208501529190931682820152606082019290925290519081900360800190f35b60005460015460025460035473ffffffffffffffffffffffffffffffffffffffff93841694928416939091169156fea2646970667358221220c8f8b4b35fae9e82e5679e5e3539f8018292a615d7fe95c251a1ec040917b78f64736f6c63430007030033";
