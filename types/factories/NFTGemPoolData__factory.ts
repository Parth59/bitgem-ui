/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NFTGemPoolData } from "../NFTGemPoolData";

export class NFTGemPoolData__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<NFTGemPoolData> {
    return super.deploy(overrides || {}) as Promise<NFTGemPoolData>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTGemPoolData {
    return super.attach(address) as NFTGemPoolData;
  }
  connect(signer: Signer): NFTGemPoolData__factory {
    return super.connect(signer) as NFTGemPoolData__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTGemPoolData {
    return new Contract(address, _abi, signerOrProvider) as NFTGemPoolData;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addAllowedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ndx",
        type: "uint256",
      },
    ],
    name: "allTokenHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allTokenHashesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowedTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimHash",
        type: "uint256",
      },
    ],
    name: "claimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimHash",
        type: "uint256",
      },
    ],
    name: "claimQuantity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimHash",
        type: "uint256",
      },
    ],
    name: "claimTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimHash",
        type: "uint256",
      },
    ],
    name: "claimUnlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "difficultyStep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxClaims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextClaimHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextClaimId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextGemHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextGemId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeAllowedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "claimHash",
        type: "uint256",
      },
    ],
    name: "stakedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenHash",
        type: "uint256",
      },
    ],
    name: "tokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenHash",
        type: "uint256",
      },
    ],
    name: "tokenType",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakedEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b3c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063a0021cf1116100f9578063cf5380b411610097578063e6c3b1f611610071578063e6c3b1f614610429578063f4fde0d31461045c578063f9eaee0d14610464578063ff186b2e146104ab576101c4565b8063cf5380b414610404578063cf721b15146103fc578063d31674db1461040c576101c4565b8063bf86999b116100d3578063bf86999b146103d7578063c08fa1a4146103aa578063c5e01a5c146103df578063c80c0613146103fc576101c4565b8063a0021cf1146103aa578063a901c474146103b2578063b788e4e9146103cf576101c4565b80635e5f2e26116101665780638a09871b116101405780638a09871b1461034a57806390469a9d14610352578063959355601461038557806395d89b41146103a2576101c4565b80635e5f2e26146102ca5780637dcb0e5f146103105780637f2e8f0c1461032d576101c4565b806323b221a0116101a257806323b221a0146102685780634178617f146102855780634565e5ef146102ba578063504cdacf146102c2576101c4565b806306fdde03146101c95780631aa430781461024657806322e67e7114610260575b600080fd5b6101d16104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61024e610564565b60408051918252519081900360200190f35b61024e61056a565b61024e6004803603602081101561027e57600080fd5b5035610570565b6102b86004803603602081101561029b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610582565b005b61024e610659565b61024e61065f565b6102e7600480360360208110156102e057600080fd5b5035610665565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61024e6004803603602081101561032657600080fd5b503561069c565b61024e6004803603602081101561034357600080fd5b50356106ae565b61024e6106c0565b6102b86004803603602081101561036857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106cf565b61024e6004803603602081101561039b57600080fd5b50356108c3565b6101d16108d5565b61024e610953565b61024e600480360360208110156103c857600080fd5b5035610959565b61024e61096b565b61024e610975565b6102e7600480360360208110156103f557600080fd5b503561097b565b61024e6109a3565b61024e6109a9565b61024e6004803603602081101561042257600080fd5b50356109af565b6104466004803603602081101561043f57600080fd5b50356109d0565b6040805160ff9092168252519081900360200190f35b61024e6109e5565b6104976004803603602081101561047a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166109eb565b604080519115158252519081900360200190f35b61024e610a16565b60028054604080516020601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094168590049384018190048102820181019092528281526060939092909183018282801561055a5780601f1061052f5761010080835404028352916020019161055a565b820191906000526020600020905b81548152906001019060200180831161053d57829003601f168201915b5050505050905090565b60045490565b60055490565b60009081526010602052604090205490565b73ffffffffffffffffffffffffffffffffffffffff811660009081526014602052604090205460ff16610656576013805460018082019092557f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416908117909155600090815260146020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690911790555b50565b60135490565b600d5490565b60006013828154811061067457fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1692915050565b60009081526009602052604090205490565b60009081526011602052604090205490565b60006106ca610a1c565b905090565b73ffffffffffffffffffffffffffffffffffffffff811660009081526014602052604090205460ff16156106565760005b6013548110156108bf578173ffffffffffffffffffffffffffffffffffffffff166013828154811061072e57fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614156108b757601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810190811061078657fe5b6000918252602090912001546013805473ffffffffffffffffffffffffffffffffffffffff90921691839081106107b957fe5b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055601380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810190811061083757fe5b6000918252602080832090910180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905573ffffffffffffffffffffffffffffffffffffffff84168252601490526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905550610656565b600101610700565b5050565b60009081526012602052604090205490565b60018054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561055a5780601f1061052f5761010080835404028352916020019161055a565b600c5490565b6000908152600e602052604090205490565b60006106ca610aa9565b60065490565b6000908152600f602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600b5490565b60075490565b6000600a82815481106109be57fe5b90600052602060002001549050919050565b60009081526008602052604090205460ff1690565b600a5490565b73ffffffffffffffffffffffffffffffffffffffff1660009081526014602052604090205460ff1690565b60035490565b6000600754600014158015610a355750600754600c5411155b80610a405750600754155b610a4b5760006106ca565b50600c54604080517f636c61696d0000000000000000000000000000000000000000000000000000006020808301919091523060601b6025830152603980830194909452825180830390940184526059909101909152815191012090565b600b54604080517f67656d00000000000000000000000000000000000000000000000000000000006020808301919091523060601b602383015260378083019490945282518083039094018452605790910190915281519101209056fea26469706673582212202dc817be6345bf7e7f83a42bd972a575645decb929fb168d536d3787ccd12f9064736f6c63430007030033";
