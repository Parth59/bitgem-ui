/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SushiSwapQueryHelper } from "../SushiSwapQueryHelper";

export class SushiSwapQueryHelper__factory extends ContractFactory {
  constructor(
    linkLibraryAddresses: SushiSwapQueryHelperLibraryAddresses,
    signer?: Signer
  ) {
    super(
      _abi,
      SushiSwapQueryHelper__factory.linkBytecode(linkLibraryAddresses),
      signer
    );
  }

  static linkBytecode(
    linkLibraryAddresses: SushiSwapQueryHelperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3f4ad620c49b6cb2369ffdc577d89662f3\\$__", "g"),
      linkLibraryAddresses["__$3f4ad620c49b6cb2369ffdc577d89662f3$__"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(overrides?: Overrides): Promise<SushiSwapQueryHelper> {
    return super.deploy(overrides || {}) as Promise<SushiSwapQueryHelper>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SushiSwapQueryHelper {
    return super.attach(address) as SushiSwapQueryHelper;
  }
  connect(signer: Signer): SushiSwapQueryHelper__factory {
    return super.connect(signer) as SushiSwapQueryHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SushiSwapQueryHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SushiSwapQueryHelper;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controllerAddress",
        type: "address",
      },
    ],
    name: "ControllerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controllerAddress",
        type: "address",
      },
    ],
    name: "ControllerRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "COIN",
    outputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "addController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "coinQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "ethereum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForCoinToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relinquishControl",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "f",
        type: "address",
      },
    ],
    name: "setFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b3f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a54a72b711610081578063c45a01551161005b578063c45a015514610307578063e1c28bef1461030f578063e6a4390514610317576100c9565b8063a54a72b714610270578063a7fc7a07146102a1578063b429afeb146102d4576100c9565b80633e99c1e4116100b25780633e99c1e4146101985780635bb47808146101e4578063868d2d1e14610219576100c9565b806309666696146100ce5780631246dbf514610151575b600080fd5b610101600480360360208110156100e457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610352565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561013d578181015183820152602001610125565b505050509050019250505060405180910390f35b6101846004803603602081101561016757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104a7565b604080519115158252519081900360200190f35b6101cb600480360360208110156101ae57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610540565b6040805192835260208301919091528051918290030190f35b610217600480360360208110156101fa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166105e4565b005b6102526004803603604081101561022f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106a2565b60408051938452602084019290925282820152519081900360600190f35b610278610759565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610217600480360360208110156102b757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166107d0565b610184600480360360208110156102ea57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610896565b6102786108c1565b6102176108d0565b6102786004803603604081101561032d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610952565b606073__$3f4ad620c49b6cb2369ffdc577d89662f3$__637dddfe9f836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060006040518083038186803b1580156103b957600080fd5b505af41580156103cd573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052602081101561041457600080fd5b810190808051604051939291908464010000000082111561043457600080fd5b90830190602082018581111561044957600080fd5b825186602082028301116401000000008211171561046657600080fd5b82525081516020918201928201910280838360005b8381101561049357818101518382015260200161047b565b505050509050016040525050509050919050565b600073__$3f4ad620c49b6cb2369ffdc577d89662f3$__631246dbf5836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561050e57600080fd5b505af4158015610522573d6000803e3d6000fd5b505050506040513d602081101561053857600080fd5b505192915050565b60008073__$3f4ad620c49b6cb2369ffdc577d89662f3$__633e99c1e4846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b1580156105a757600080fd5b505af41580156105bb573d6000803e3d6000fd5b505050506040513d60408110156105d157600080fd5b5080516020909101519094909350915050565b3360009081526020819052604090205460ff1615156001148061060657503033145b61065b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ae26028913960400191505060405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600080600073__$3f4ad620c49b6cb2369ffdc577d89662f3$__631874f0a986866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060606040518083038186803b15801561071457600080fd5b505af4158015610728573d6000803e3d6000fd5b505050506040513d606081101561073e57600080fd5b50805160208201516040909201519097919650945092505050565b600073__$3f4ad620c49b6cb2369ffdc577d89662f3$__63ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561079f57600080fd5b505af41580156107b3573d6000803e3d6000fd5b505050506040513d60208110156107c957600080fd5b5051919050565b3360009081526020819052604090205460ff161515600114806107f257503033145b610847576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ae26028913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff16600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b60006108cb610a2f565b905090565b3360009081526020819052604090205460ff161515600114806108f257503033145b610947576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610ae26028913960400191505060405180910390fd5b336000908152602052565b600073__$3f4ad620c49b6cb2369ffdc577d89662f3$__6361e0b77f610976610a2f565b85856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001935050505060206040518083038186803b1580156109fc57600080fd5b505af4158015610a10573d6000803e3d6000fd5b505050506040513d6020811015610a2657600080fd5b50519392505050565b60015460009073ffffffffffffffffffffffffffffffffffffffff16610ac45773__$3f4ad620c49b6cb2369ffdc577d89662f3$__63c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9357600080fd5b505af4158015610aa7573d6000803e3d6000fd5b505050506040513d6020811015610abd57600080fd5b50516108cb565b5060015473ffffffffffffffffffffffffffffffffffffffff169056fe436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f6e74726f6c6c6572a2646970667358221220580f64346216b031ad9b2280111b878669ac386e826e953e6c81430949c93e9864736f6c63430007030033";

export interface SushiSwapQueryHelperLibraryAddresses {
  ["__$3f4ad620c49b6cb2369ffdc577d89662f3$__"]: string;
}
