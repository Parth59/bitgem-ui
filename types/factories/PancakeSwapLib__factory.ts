/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PancakeSwapLib } from "../PancakeSwapLib";

export class PancakeSwapLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PancakeSwapLib> {
    return super.deploy(overrides || {}) as Promise<PancakeSwapLib>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PancakeSwapLib {
    return super.attach(address) as PancakeSwapLib;
  }
  connect(signer: Signer): PancakeSwapLib__factory {
    return super.connect(signer) as PancakeSwapLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PancakeSwapLib {
    return new Contract(address, _abi, signerOrProvider) as PancakeSwapLib;
  }
}

const _abi = [
  {
    inputs: [],
    name: "COIN",
    outputs: [
      {
        internalType: "address",
        name: "wavax",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "PANCAKE_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "coinQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "coin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coinReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForCoinToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "pairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610fb0610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100ad5760003560e01c806361e0b77f11610080578063868d2d1e11610065578063868d2d1e14610283578063a54a72b7146102da578063c45a0155146102e2576100ad565b806361e0b77f146101f95780636d91c0e21461023e576100ad565b806309666696146100b25780631246dbf51461013557806328ac7c511461017c5780633e99c1e4146101ad575b600080fd5b6100e5600480360360208110156100c857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166102ea565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610121578181015183820152602001610109565b505050509050019250505060405180910390f35b6101686004803603602081101561014b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661041b565b604080519115158252519081900360200190f35b61018461060d565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101e0600480360360208110156101c357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610625565b6040805192835260208301919091528051918290030190f35b6101846004803603606081101561020f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135821691604090910135166106bd565b6101846004803603606081101561025457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101358216916040909101351661089f565b6102bc6004803603604081101561029957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561098a565b60408051938452602084019290925282820152519081900360600190f35b610184610c29565b610184610cb6565b604080516002808252606082810190935273bcfccbde45ce874adcb698cc183debcf17952812918391816020016020820280368337019050509050838160008151811061033357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b357600080fd5b505afa1580156103c7573d6000803e3d6000fd5b505050506040513d60208110156103dd57600080fd5b50518151829060019081106103ee57fe5b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152915050919050565b60008073bcfccbde45ce874adcb698cc183debcf17952812905060008173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561047d57600080fd5b505afa158015610491573d6000803e3d6000fd5b505050506040513d60208110156104a757600080fd5b5051604080517fad5c4648000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff85169163ad5c4648916004808301926020929190829003018186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d602081101561053f57600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b505173ffffffffffffffffffffffffffffffffffffffff1615159695505050505050565b73bcfccbde45ce874adcb698cc183debcf1795281281565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561066e57600080fd5b505afa158015610682573d6000803e3d6000fd5b505050506040513d606081101561069857600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169591169350915050565b600073ffffffffffffffffffffffffffffffffffffffff841661074157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff83161580159061077b575073ffffffffffffffffffffffffffffffffffffffff821615155b6107e657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b8373ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561086b57600080fd5b505afa15801561087f573d6000803e3d6000fd5b505050506040513d602081101561089557600080fd5b5051949350505050565b60008060006108ae8585610d12565b604080517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527fd0d4c4cd0848c93cb4fd1f498d7013ee6bfb25783ea21593d5834f5d250ece66609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b60008060008073bcfccbde45ce874adcb698cc183debcf17952812905060008173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ef57600080fd5b505afa158015610a03573d6000803e3d6000fd5b505050506040513d6020811015610a1957600080fd5b5051604080517fad5c4648000000000000000000000000000000000000000000000000000000008152905191925060009173ffffffffffffffffffffffffffffffffffffffff85169163ad5c4648916004808301926020929190829003018186803b158015610a8757600080fd5b505afa158015610a9b573d6000803e3d6000fd5b505050506040513d6020811015610ab157600080fd5b5051604080517fe6a4390500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b158015610b3157600080fd5b505afa158015610b45573d6000803e3d6000fd5b505050506040513d6020811015610b5b57600080fd5b5051604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152905191925073ffffffffffffffffffffffffffffffffffffffff831691630902f1ac91600480820192606092909190829003018186803b158015610bc757600080fd5b505afa158015610bdb573d6000803e3d6000fd5b505050506040513d6060811015610bf157600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169750169450610c1c888787610e7b565b9650505050509250925092565b600073bcfccbde45ce874adcb698cc183debcf1795281273ffffffffffffffffffffffffffffffffffffffff1663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610c8557600080fd5b505afa158015610c99573d6000803e3d6000fd5b505050506040513d6020811015610caf57600080fd5b5051919050565b600073bcfccbde45ce874adcb698cc183debcf1795281273ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610c8557600080fd5b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610db057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f50726963653a204944454e544943414c5f414444524553534553000000000000604482015290519081900360640190fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1610610dea578284610ded565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216610e7457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f50726963653a205a45524f5f4144445245535300000000000000000000000000604482015290519081900360640190fd5b9250929050565b6000808411610eeb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f50726963653a2050726963650000000000000000000000000000000000000000604482015290519081900360640190fd5b600083118015610efb5750600082115b610f6657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f50726963653a20494e53554646494349454e545f4c4951554944495459000000604482015290519081900360640190fd5b8282850281610f7157fe5b0494935050505056fea26469706673582212209dff3431871f87f705427e2525149d4df22d7b66253e1d3b8cf08df3558fe46764736f6c63430007030033";
