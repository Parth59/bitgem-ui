/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SushiSwapLib } from "../SushiSwapLib";

export class SushiSwapLib__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<SushiSwapLib> {
    return super.deploy(overrides || {}) as Promise<SushiSwapLib>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SushiSwapLib {
    return super.attach(address) as SushiSwapLib;
  }
  connect(signer: Signer): SushiSwapLib__factory {
    return super.connect(signer) as SushiSwapLib__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SushiSwapLib {
    return new Contract(address, _abi, signerOrProvider) as SushiSwapLib;
  }
}

const _abi = [
  {
    inputs: [],
    name: "UNISWAP_ROUTER_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "ethQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "ethereum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenReserve",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethReserve",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "fac",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPathForETHToToken",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "pairFor",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610cf0610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100ad5760003560e01c80636d91c0e2116100805780637dddfe9f116100655780637dddfe9f14610209578063ad5c46481461027f578063c45a015514610287576100ad565b80636d91c0e2146101c957806379b3694314610201576100ad565b80631246dbf5146100b25780631874f0a9146100ec5780633e99c1e41461013657806361e0b77f14610175575b600080fd5b6100d8600480360360208110156100c857600080fd5b50356001600160a01b031661028f565b604080519115158252519081900360200190f35b6101186004803603604081101561010257600080fd5b506001600160a01b03813516906020013561041b565b60408051938452602084019290925282820152519081900360600190f35b61015c6004803603602081101561014c57600080fd5b50356001600160a01b0316610654565b6040805192835260208301919091528051918290030190f35b6101ad6004803603606081101561018b57600080fd5b506001600160a01b0381358116916020810135821691604090910135166106df565b604080516001600160a01b039092168252519081900360200190f35b6101ad600480360360608110156101df57600080fd5b506001600160a01b03813581169160208101358216916040909101351661083f565b6101ad610917565b61022f6004803603602081101561021f57600080fd5b50356001600160a01b031661092f565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561026b578181015183820152602001610253565b505050509050019250505060405180910390f35b6101ad610a2c565b6101ad610aac565b600080731b02da8cb0d097eb8d57a175b88c7d8b4799750690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156102e457600080fd5b505afa1580156102f8573d6000803e3d6000fd5b505050506040513d602081101561030e57600080fd5b5051604080516315ab88c960e31b815290519192506000916001600160a01b0385169163ad5c4648916004808301926020929190829003018186803b15801561035657600080fd5b505afa15801561036a573d6000803e3d6000fd5b505050506040513d602081101561038057600080fd5b50516040805163e6a4390560e01b81526001600160a01b038881166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b1580156103da57600080fd5b505afa1580156103ee573d6000803e3d6000fd5b505050506040513d602081101561040457600080fd5b50516001600160a01b031615159695505050505050565b600080600080731b02da8cb0d097eb8d57a175b88c7d8b4799750690506000816001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561047357600080fd5b505afa158015610487573d6000803e3d6000fd5b505050506040513d602081101561049d57600080fd5b5051604080516315ab88c960e31b815290519192506000916001600160a01b0385169163ad5c4648916004808301926020929190829003018186803b1580156104e557600080fd5b505afa1580156104f9573d6000803e3d6000fd5b505050506040513d602081101561050f57600080fd5b50516040805163e6a4390560e01b81526001600160a01b038b81166004830152808416602483015291519293506000929185169163e6a4390591604480820192602092909190829003018186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d602081101561059357600080fd5b5051604080517f0902f1ac00000000000000000000000000000000000000000000000000000000815290519192506001600160a01b03831691630902f1ac91600480820192606092909190829003018186803b1580156105f257600080fd5b505afa158015610606573d6000803e3d6000fd5b505050506040513d606081101561061c57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169750169450610647888787610afb565b9650505050509250925092565b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561069057600080fd5b505afa1580156106a4573d6000803e3d6000fd5b505050506040513d60608110156106ba57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169591169350915050565b60006001600160a01b03841661073c576040805162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0383161580159061075c57506001600160a01b03821615155b6107ad576040805162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f544f4b454e53000000000000000000000000000000000000604482015290519081900360640190fd5b836001600160a01b031663e6a4390584846040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d602081101561083557600080fd5b5051949350505050565b600080600061084e8585610bc6565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501207fff0000000000000000000000000000000000000000000000000000000000000060688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b731b02da8cb0d097eb8d57a175b88c7d8b4799750681565b6040805160028082526060828101909352731b02da8cb0d097eb8d57a175b88c7d8b47997506918391816020016020820280368337019050509050838160008151811061097857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050816001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d60208110156109fb57600080fd5b5051815182906001908110610a0c57fe5b6001600160a01b0390921660209283029190910190910152915050919050565b6000731b02da8cb0d097eb8d57a175b88c7d8b479975066001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7b57600080fd5b505afa158015610a8f573d6000803e3d6000fd5b505050506040513d6020811015610aa557600080fd5b5051919050565b6000731b02da8cb0d097eb8d57a175b88c7d8b479975066001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7b57600080fd5b6000808411610b51576040805162461bcd60e51b815260206004820152600c60248201527f50726963653a2050726963650000000000000000000000000000000000000000604482015290519081900360640190fd5b600083118015610b615750600082115b610bb2576040805162461bcd60e51b815260206004820152601d60248201527f50726963653a20494e53554646494349454e545f4c4951554944495459000000604482015290519081900360640190fd5b8282850281610bbd57fe5b04949350505050565b600080826001600160a01b0316846001600160a01b03161415610c30576040805162461bcd60e51b815260206004820152601a60248201527f50726963653a204944454e544943414c5f414444524553534553000000000000604482015290519081900360640190fd5b826001600160a01b0316846001600160a01b031610610c50578284610c53565b83835b90925090506001600160a01b038216610cb3576040805162461bcd60e51b815260206004820152601360248201527f50726963653a205a45524f5f4144445245535300000000000000000000000000604482015290519081900360640190fd5b925092905056fea26469706673582212207092b0a510bd0368852e482e48f3ffb415fd0f19e2f8ba3b13f8e3c968aa13c064736f6c63430007030033";
