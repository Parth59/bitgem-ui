/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import { Contract, ContractTransaction } from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ComplexPoolLibInterface extends ethers.utils.Interface {
  functions: {};

  events: {
    "NFTGemClaimCreated(address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "NFTGemClaimRedeemed(address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "NFTGemCreated(address,address,uint256,uint256,uint256)": EventFragment;
    "NFTGemERC20ClaimCreated(address,address,uint256,uint256,address,uint256,uint256)": EventFragment;
    "NFTGemERC20ClaimRedeemed(address,address,uint256,address,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NFTGemClaimCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NFTGemClaimRedeemed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NFTGemCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NFTGemERC20ClaimCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NFTGemERC20ClaimRedeemed"): EventFragment;
}

export class ComplexPoolLib extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ComplexPoolLibInterface;

  functions: {};

  callStatic: {};

  filters: {
    NFTGemClaimCreated(
      account: string | null,
      pool: string | null,
      claimHash: BigNumberish | null,
      length: null,
      quantity: null,
      amountPaid: null
    ): EventFilter;

    NFTGemClaimRedeemed(
      account: string | null,
      pool: string | null,
      claimHash: BigNumberish | null,
      amountPaid: null,
      quantity: null,
      feeAssessed: null
    ): EventFilter;

    NFTGemCreated(
      account: null,
      pool: null,
      claimHash: null,
      gemHash: null,
      quantity: null
    ): EventFilter;

    NFTGemERC20ClaimCreated(
      account: string | null,
      pool: string | null,
      claimHash: BigNumberish | null,
      length: null,
      token: null,
      quantity: null,
      conversionRate: null
    ): EventFilter;

    NFTGemERC20ClaimRedeemed(
      account: string | null,
      pool: string | null,
      claimHash: BigNumberish | null,
      token: null,
      ethPrice: null,
      tokenAmount: null,
      quantity: null,
      feeAssessed: null
    ): EventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
